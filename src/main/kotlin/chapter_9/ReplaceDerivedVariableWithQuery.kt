package chapter_9

/*
 이름 : 9.3 파생 변수를 질의 함수로 바꾸기
 개요 : 함수에 기능을 위해 추가된 파생 변수를 질의 함수로 변경하기
 배경 : 가변 데이터는 소프트웨어에 문제를 일으키는 가장 큰 골칫거리에 속한다.
 가변 데이터를 사용하지 않는것은 불가능에 가까우니 유효 범위를 가능한 좁혀야한다.
 효과: 값을 쉽게 계산해내는 변수를 모두 제거,계산 과정을 보여주는 코드 자체가 더 의미를 분명히 드러내고, 변경된 값을 깜빡하고 변수에 반영하지 않는 실수 방지
 예외: 피연산자 데이터가 불변일 경우 계산 결과도 일정하므로 불변으로 만들 수 있다.
 그래서 새로운 데이터 구조를 생성하는 변형 연산이라면 계산 코드를 대채가 가능해도 그냥 둔다.
 변형 연산 특징
 1. 데이터 구조를 감싸며 그 데이터에 기초하여 계산한 결과를 속성으로 제공하는 객체(데이터 클래스?)
 2. 데이터 구조를 받아 다른 데이터 구조로 변환해 반환하는 함수(변환 함수)
 */
/*
 절차
 1. 변수 값이 갱신되는 지점을 모두 찾는다. 필요하면 변수 쪼개기를 활용해 각 갱신 지점에서 변수 분리
 2. 해당 변수의 값을 계산해주는 함수 생성
 3. 해당 변수가 사용되는 모든 곳에 어서션 추가, 함수의 계산 결과가 변수의 값과 같은지 확인
 4. 테스트
 5. 변수를 읽는 코드를 모두 함수 호출로 대체
 6. 테스트
 7. 변수를 선언하고 갱신하는 코드를 죽은 코드 제거하기로 제거
 */
data class Adjustment(val amount:Int)
class ProductionPlan(production:Int){
    var production  = production
    var adjustments = mutableListOf<Adjustment>()
    fun applyAdjustment(anAdjustment:Adjustment){
        adjustments.add(anAdjustment)
        production += anAdjustment.amount
    }


}